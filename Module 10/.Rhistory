MASS::boxcox(refit1, lambda = seq(-0.2, 0.2, 0.1))
ystar<-log(train$price)
train<-data.frame(train,ystar)
ystar_result<-lm(ystar ~ sqft_living + grade + house_age + waterfront +
view + bathrooms + bedrooms + sqft_lot + condition + floors
,data=train)
par(mfrow=c(2,2))
plot(ystar_result)
ggplot(train, aes(x=bedrooms, y=ystar))+
geom_point()+
geom_smooth(method = lm)+
labs(x="Number of Bedrooms", y="Log(Price)", title="Log(Price) against Number of Bedrooms")
#scale_y_continuous(labels = scales::dollar_format(prefix="$"))
ggplot(train, aes(x=bathrooms, y=ystar))+
geom_point()+
geom_smooth(method = lm)+
labs(x="Number of Bathrooms", y="Log(Price)", title="Log(Price) against Number of Bathrooms")
#scale_y_continuous(labels = scales::dollar_format(prefix="$"))
ggplot(train, aes(x=sqft_living, y=ystar))+
geom_point()+
geom_smooth(method = lm)+
labs(x="Square Footage of Living Space", y="Log(Price)", title="Log(Price) against Square Footage of Living Space")
#scale_y_continuous(labels = scales::dollar_format(prefix="$"))
ggplot(train,aes(x=floors,y=ystar))+
geom_point()+
geom_smooth(method = lm)+
labs(x="Number of Floors",y="Log(Price)",title="Log(Price) against Number of Floors")
#scale_y_continuous(labels = scales::dollar_format(prefix="$"))
ggplot(train, aes(x=waterfront, y=ystar))+
geom_point()+
geom_smooth(method = lm)+
labs(x="Waterfront", y="Log(Price)", title="Log(Price) against Waterfront")
#scale_y_continuous(labels = scales::dollar_format(prefix="$"))
ggplot(train, aes(x=view, y=ystar))+
geom_point()+
geom_smooth(method = lm)+
labs(x="View", y="Log(Price)", title="Log(Price) against View")
#scale_y_continuous(labels = scales::dollar_format(prefix="$"))
ggplot(train, aes(x=condition, y=ystar))+
geom_point()+
geom_smooth(method = lm)+
labs(x="Condition", y="Log(Price)", title="Log(Price) against Condition")
#scale_y_continuous(labels = scales::dollar_format(prefix="$"))
ggplot(train, aes(x=house_age, y=ystar))+
geom_point()+
geom_smooth(method = lm)+
labs(x="Age of House", y="Log(Price)", title="Log(Price) against Age of House")
#scale_y_continuous(labels = scales::dollar_format(prefix="$"))
ggplot(train, aes(x=yrs_reno, y=ystar))+
geom_point()+
geom_smooth(method = lm)+
labs(x="Years since Renovation", y="Log(Price)", title="Log(Price) against Years since Renovation")
#scale_y_continuous(labels = scales::dollar_format(prefix="$"))
Data<-read.csv("kc_house_data.csv", sep=",", header=TRUE)
set.seed(6021)
sample.data<-sample.int(nrow(Data), floor(.50*nrow(Data)), replace = F)
train<-Data[sample.data, ]
test<-Data[-sample.data, ]
train$house_age<-2024 - train$yr_built
train$yrs_reno<-ifelse(train$yr_renovated == 0,0, 2024 - train$yr_renovated)
#train$floors<-factor(train$floors)
#train$bedrooms<-factor(train$bedrooms)
#train$waterfront<-factor(train$waterfront)
#train$view<-factor(train$view)
#rain$condition<-factor(train$condition)
train<-train[,-c(1,2,15,16,18,19,20,21)]
allreg <- leaps::regsubsets(price ~., data=train, nbest=1)
summary(allreg)
which.max(summary(allreg)$adjr2)
which.min(summary(allreg)$cp)
which.min(summary(allreg)$bic)
regnull <- lm(price~1, data=train)
regfull <- lm(price~., data=train)
step(regnull, scope=list(lower=regnull, upper=regfull), direction="forward", trace = 0 )
step(regfull, scope=list(lower=regnull, upper=regfull), direction="backward", trace = 0)
step(regnull, scope=list(lower=regnull, upper=regfull), direction="both", trace = 0)
model.initial<-lm(price ~ sqft_living + grade + house_age + waterfront +
view + bathrooms + bedrooms + sqft_lot + condition + floors +
sqft_above, data = train)
summary(model.initial)
sort(round(car::vif(model.initial),4))
refit1<-lm(price ~ sqft_living + grade + house_age + waterfront +
view + bathrooms + bedrooms + sqft_lot + condition + floors
,data=train)
summary(refit1)
sort(round(car::vif(refit1),4))
#allreg <- leaps::regsubsets(price ~ sqft_living + grade + house_age + waterfront +
#   view + bathrooms + bedrooms + sqft_lot + condition + floors
#  , data=train, nbest=1)
#summary(allreg)
#which.max(summary(allreg)$adjr2)
#which.min(summary(allreg)$cp)
#which.min(summary(allreg)$bic)
par(mfrow=c(2,2))
plot(refit1)
#ACF Doesn't work, not all arguments have the same length
#acf(refit1)
MASS::boxcox(refit1, lambda = seq(-0.2, 0.2, 0.1))
ystar<-log(train$price)
train<-data.frame(train,ystar)
ystar_result<-lm(ystar ~ sqft_living + grade + house_age + waterfront +
view + bathrooms + bedrooms + sqft_lot + condition + floors
,data=train)
par(mfrow=c(2,2))
plot(ystar_result)
ggplot(train, aes(x=bedrooms, y=ystar))+
geom_point()+
geom_smooth(method = lm)+
labs(x="Number of Bedrooms", y="Log(Price)", title="Log(Price) against Number of Bedrooms")
#scale_y_continuous(labels = scales::dollar_format(prefix="$"))
ggplot(train, aes(x=bathrooms, y=ystar))+
geom_point()+
geom_smooth(method = lm)+
labs(x="Number of Bathrooms", y="Log(Price)", title="Log(Price) against Number of Bathrooms")
#scale_y_continuous(labels = scales::dollar_format(prefix="$"))
ggplot(train, aes(x=sqft_living, y=ystar))+
geom_point()+
geom_smooth(method = lm)+
labs(x="Square Footage of Living Space", y="Log(Price)", title="Log(Price) against Square Footage of Living Space")
#scale_y_continuous(labels = scales::dollar_format(prefix="$"))
ggplot(train,aes(x=floors,y=ystar))+
geom_point()+
geom_smooth(method = lm)+
labs(x="Number of Floors",y="Log(Price)",title="Log(Price) against Number of Floors")
#scale_y_continuous(labels = scales::dollar_format(prefix="$"))
ggplot(train, aes(x=waterfront, y=ystar))+
geom_point()+
geom_smooth(method = lm)+
labs(x="Waterfront", y="Log(Price)", title="Log(Price) against Waterfront")
#scale_y_continuous(labels = scales::dollar_format(prefix="$"))
ggplot(train, aes(x=view, y=ystar))+
geom_point()+
geom_smooth(method = lm)+
labs(x="View", y="Log(Price)", title="Log(Price) against View")
#scale_y_continuous(labels = scales::dollar_format(prefix="$"))
ggplot(train, aes(x=condition, y=ystar))+
geom_point()+
geom_smooth(method = lm)+
labs(x="Condition", y="Log(Price)", title="Log(Price) against Condition")
#scale_y_continuous(labels = scales::dollar_format(prefix="$"))
ggplot(train, aes(x=house_age, y=ystar))+
geom_point()+
geom_smooth(method = lm)+
labs(x="Age of House", y="Log(Price)", title="Log(Price) against Age of House")
#scale_y_continuous(labels = scales::dollar_format(prefix="$"))
ggplot(train, aes(x=yrs_reno, y=ystar))+
geom_point()+
geom_smooth(method = lm)+
labs(x="Years since Renovation", y="Log(Price)", title="Log(Price) against Years since Renovation")
#scale_y_continuous(labels = scales::dollar_format(prefix="$"))
ggplot(train, aes(x=bathrooms,y=ystar,color=bedrooms))+
geom_point(alpha=0.05)+
geom_smooth(method=lm,se=FALSE)+
labs(x="Number of Bathrooms", y="Log(Price)", title="Effect of Number of Bathrooms and Bedrooms on Log(Price)")+
scale_y_continuous(labels = scales::dollar_format(prefix="$"))
ggplot(train, aes(x=bedrooms, y=ystar))+
geom_boxplot(fill="Blue")+
labs(x="Number of Bedrooms", y="Log(Price)", title="Dist of Log(Price) by Number of Bedrooms")+
scale_y_continuous(labels = scales::dollar_format(prefix="$"))
ggplot(train, aes(x=sqft_living,y=ystar, size=sqft_lot))+
geom_point(alpha=0.1)+
geom_smooth(method=lm,se=FALSE)+
labs(x="Square Feet of Living Space", y= "Log(Price)", title= "Effect of Living Space and Lot Size on Log(Price)")+
scale_y_continuous(labels = scales::dollar_format(prefix="$"))
ggplot(train, aes(x=house_age,y=ystar))+
geom_point()+
geom_smooth(method=lm,se=FALSE)+
labs(x="Age of House",y="Log(Price)", title="Log(Price) against Age of House")+
scale_y_continuous(labels = scales::dollar_format(prefix="$"))
ggplot(train, aes(x=waterfront, y=ystar))+
geom_boxplot(fill="Blue")+
labs(x="Waterfront", y="Log(Price)", title="Dist of Log(Price) by Waterfront")+
scale_y_continuous(labels = scales::dollar_format(prefix="$"))
ggplot(train,aes(x=ystar))+
geom_density()+
labs(x="Log(Price)",y="Density",title="Density of Log(Price)")
train$bedrooms<-factor(train$bedrooms)
ggplot(train, aes(x=bathrooms,y=ystar,color=bedrooms))+
geom_point(alpha=0.05)+
geom_smooth(method=lm,se=FALSE)+
labs(x="Number of Bathrooms", y="Log(Price)", title="Effect of Number of Bathrooms and Bedrooms on Log(Price)")+
scale_y_continuous(labels = scales::dollar_format(prefix="$"))
ggplot(train, aes(x=bedrooms, y=ystar))+
geom_boxplot(fill="Blue")+
labs(x="Number of Bedrooms", y="Log(Price)", title="Dist of Log(Price) by Number of Bedrooms")+
scale_y_continuous(labels = scales::dollar_format(prefix="$"))
ggplot(train, aes(x=sqft_living,y=ystar, size=sqft_lot))+
geom_point(alpha=0.1)+
geom_smooth(method=lm,se=FALSE)+
labs(x="Square Feet of Living Space", y= "Log(Price)", title= "Effect of Living Space and Lot Size on Log(Price)")+
scale_y_continuous(labels = scales::dollar_format(prefix="$"))
ggplot(train, aes(x=house_age,y=ystar))+
geom_point()+
geom_smooth(method=lm,se=FALSE)+
labs(x="Age of House",y="Log(Price)", title="Log(Price) against Age of House")+
scale_y_continuous(labels = scales::dollar_format(prefix="$"))
ggplot(train, aes(x=waterfront, y=ystar))+
geom_boxplot(fill="Blue")+
labs(x="Waterfront", y="Log(Price)", title="Dist of Log(Price) by Waterfront")+
scale_y_continuous(labels = scales::dollar_format(prefix="$"))
ggplot(train,aes(x=ystar))+
geom_density()+
labs(x="Log(Price)",y="Density",title="Density of Log(Price)")
train$bedrooms<-factor(train$bedrooms)
ggplot(train, aes(x=bathrooms,y=ystar,color=bedrooms))+
geom_point(alpha=0.05)+
geom_smooth(method=lm,se=FALSE)+
labs(x="Number of Bathrooms", y="Log(Price)", title="Effect of Number of Bathrooms and Bedrooms on Log(Price)")
ggplot(train, aes(x=bedrooms, y=ystar))+
geom_boxplot(fill="Blue")+
labs(x="Number of Bedrooms", y="Log(Price)", title="Dist of Log(Price) by Number of Bedrooms")
ggplot(train, aes(x=sqft_living,y=ystar, size=sqft_lot))+
geom_point(alpha=0.1)+
geom_smooth(method=lm,se=FALSE)+
labs(x="Square Feet of Living Space", y= "Log(Price)", title= "Effect of Living Space and Lot Size on Log(Price)")
ggplot(train, aes(x=house_age,y=ystar))+
geom_point()+
geom_smooth(method=lm,se=FALSE)+
labs(x="Age of House",y="Log(Price)", title="Log(Price) against Age of House")
ggplot(train, aes(x=waterfront, y=ystar))+
geom_boxplot(fill="Blue")+
labs(x="Waterfront", y="Log(Price)", title="Dist of Log(Price) by Waterfront")
ggplot(train,aes(x=ystar))+
geom_density()+
labs(x="Log(Price)",y="Density",title="Density of Log(Price)")
train$bedrooms<-factor(train$bedrooms)
ggplot(train, aes(x=bathrooms,y=ystar,color=bedrooms))+
geom_point(alpha=0.05)+
geom_smooth(method=lm,se=FALSE)+
labs(x="Number of Bathrooms", y="Log(Price)", title="Effect of Number of Bathrooms and Bedrooms on Log(Price)")
ggplot(train, aes(x=bedrooms, y=ystar))+
geom_boxplot(fill="Blue")+
labs(x="Number of Bedrooms", y="Log(Price)", title="Dist of Log(Price) by Number of Bedrooms")
ggplot(train, aes(x=sqft_living,y=ystar, size=sqft_lot))+
geom_point(alpha=0.1)+
geom_smooth(method=lm,se=FALSE)+
labs(x="Square Feet of Living Space", y= "Log(Price)", title= "Effect of Living Space and Lot Size on Log(Price)")
ggplot(train, aes(x=house_age,y=ystar))+
geom_point()+
geom_smooth(method=lm,se=FALSE)+
labs(x="Age of House",y="Log(Price)", title="Log(Price) against Age of House")
train$waterfront<-factor(train$waterfront)
ggplot(train, aes(x=waterfront, y=ystar))+
geom_boxplot(fill="Blue")+
labs(x="Waterfront", y="Log(Price)", title="Dist of Log(Price) by Waterfront")
ggplot(train,aes(x=ystar))+
geom_density()+
labs(x="Log(Price)",y="Density",title="Density of Log(Price)")
ggplot(train, aes(x=bedrooms, y=ystar))+
geom_point()+
geom_smooth(method = lm)+
labs(x="Number of Bedrooms", y="Log(Price)", title="Log(Price) against Number of Bedrooms")
#scale_y_continuous(labels = scales::dollar_format(prefix="$"))
ggplot(train, aes(x=bathrooms, y=ystar))+
geom_point()+
geom_smooth(method = lm)+
labs(x="Number of Bathrooms", y="Log(Price)", title="Log(Price) against Number of Bathrooms")
#scale_y_continuous(labels = scales::dollar_format(prefix="$"))
ggplot(train, aes(x=sqft_living, y=ystar))+
geom_point()+
geom_smooth(method = lm)+
labs(x="Square Footage of Living Space", y="Log(Price)", title="Log(Price) against Square Footage of Living Space")
#scale_y_continuous(labels = scales::dollar_format(prefix="$"))
ggplot(train,aes(x=floors,y=ystar))+
geom_point()+
geom_smooth(method = lm)+
labs(x="Number of Floors",y="Log(Price)",title="Log(Price) against Number of Floors")
#scale_y_continuous(labels = scales::dollar_format(prefix="$"))
train$waterfront<-factor(train$waterfront)
ggplot(train, aes(x=waterfront, y=ystar))+
geom_boxplot(fill="Blue")+
labs(x="Waterfront", y="Log(Price)", title="Dist of Log(Price) by Waterfront")
train$view<-factor(train$view)
ggplot(train, aes(x=view, y=ystar))+
geom_boxplot(fill="Blue")+
labs(x="View", y="Log(Price)", title="Dist of Log(Price) by View")
train$condition<-factor(train$condition)
ggplot(train, aes(x=condition, y=ystar))+
geom_boxplot(fill="Blue")+
labs(x="Condition", y="Log(Price)", title="Dist of Log(Price) by Condition")
ggplot(train, aes(x=house_age, y=ystar))+
geom_point()+
geom_smooth(method = lm)+
labs(x="Age of House", y="Log(Price)", title="Log(Price) against Age of House")
#scale_y_continuous(labels = scales::dollar_format(prefix="$"))
ggplot(train, aes(x=yrs_reno, y=ystar))+
geom_point()+
geom_smooth(method = lm)+
labs(x="Years since Renovation", y="Log(Price)", title="Log(Price) against Years since Renovation")
#scale_y_continuous(labels = scales::dollar_format(prefix="$"))
ggplot(train, aes(x=bedrooms, y=ystar))+
geom_point()+
geom_smooth(method = lm)+
labs(x="Number of Bedrooms", y="Log(Price)", title="Log(Price) against Number of Bedrooms")
#scale_y_continuous(labels = scales::dollar_format(prefix="$"))
ggplot(train, aes(x=bathrooms, y=ystar))+
geom_point()+
geom_smooth(method = lm)+
labs(x="Number of Bathrooms", y="Log(Price)", title="Log(Price) against Number of Bathrooms")
#scale_y_continuous(labels = scales::dollar_format(prefix="$"))
ggplot(train, aes(x=sqft_living, y=ystar))+
geom_point()+
geom_smooth(method = lm)+
labs(x="Square Footage of Living Space", y="Log(Price)", title="Log(Price) against Square Footage of Living Space")
#scale_y_continuous(labels = scales::dollar_format(prefix="$"))
train$floors<-factor(train$floors)
ggplot(train, aes(x=floors, y=ystar))+
geom_boxplot(fill="Blue")+
labs(x="Floors", y="Log(Price)", title="Dist of Log(Price) by Floors")
train$waterfront<-factor(train$waterfront)
ggplot(train, aes(x=waterfront, y=ystar))+
geom_boxplot(fill="Blue")+
labs(x="Waterfront", y="Log(Price)", title="Dist of Log(Price) by Waterfront")
train$view<-factor(train$view)
ggplot(train, aes(x=view, y=ystar))+
geom_boxplot(fill="Blue")+
labs(x="View", y="Log(Price)", title="Dist of Log(Price) by View")
train$condition<-factor(train$condition)
ggplot(train, aes(x=condition, y=ystar))+
geom_boxplot(fill="Blue")+
labs(x="Condition", y="Log(Price)", title="Dist of Log(Price) by Condition")
ggplot(train, aes(x=house_age, y=ystar))+
geom_point()+
geom_smooth(method = lm)+
labs(x="Age of House", y="Log(Price)", title="Log(Price) against Age of House")
#scale_y_continuous(labels = scales::dollar_format(prefix="$"))
ggplot(train, aes(x=yrs_reno, y=ystar))+
geom_point()+
geom_smooth(method = lm)+
labs(x="Years since Renovation", y="Log(Price)", title="Log(Price) against Years since Renovation")
#scale_y_continuous(labels = scales::dollar_format(prefix="$"))
library(faraway)
library(ROCR)
Data<-wcgs
#set.seed used for reproducability
set.seed(6021)
sample<-sample.int(nrow(Data), floor(.50*nrow(Data)), replace = F)
train<-Data[sample, ]
test<-Data[-sample, ]
#Creating logistic regression
result<-glm(chd~age+sdp+cigs+dibep,family=binomial,data=train)
summary(result)
##predicted probs for test data
preds<-predict(result,newdata=test, type="response")
##produce the numbers associated with classification table
rates<-ROCR::prediction(preds, test$chd)
##store the true positive and false postive rates
roc_result<-ROCR::performance(rates,measure="tpr", x.measure="fpr")
##plot ROC curve and overlay the diagonal line for random guessing
plot(roc_result, main="ROC Curve for Reduced Model")
lines(x = c(0,1), y = c(0,1), col="red")
auc<-ROCR::performance(rates, measure = "auc")
auc@y.values
table(test$chd, preds>0.5)
print(table(test$chd, preds>0.4))
print(table(test$chd, preds>0.3))
print(table(test$chd, preds>0.1))
Data<-read.csv("kc_house_data.csv", sep=",", header=TRUE)
set.seed(6021)
sample.data<-sample.int(nrow(Data), floor(.50*nrow(Data)), replace = F)
train<-Data[sample.data, ]
test<-Data[-sample.data, ]
train$house_age<-2024 - train$yr_built
train$yrs_reno<-ifelse(train$yr_renovated == 0,0, 2024 - train$yr_renovated)
#train$floors<-factor(train$floors)
#train$bedrooms<-factor(train$bedrooms)
#train$waterfront<-factor(train$waterfront)
#train$view<-factor(train$view)
#rain$condition<-factor(train$condition)
train<-train[,-c(1,2,15,16,18,19,20,21)]
allreg <- leaps::regsubsets(price ~., data=train, nbest=1)
summary(allreg)
which.max(summary(allreg)$adjr2)
which.min(summary(allreg)$cp)
which.min(summary(allreg)$bic)
GGally::ggpairs(train)
model.initial<-lm(price ~ sqft_living + grade + house_age + waterfront +
view + bathrooms + bedrooms + sqft_lot + condition + floors +
sqft_above, data = train)
summary(model.initial)
2*pt(-0.619649, df=10807-12)
pt(-0.619649, df=10807-12)
pt(-1.4524, df=10807-12)
2 * pt(-1.4524, df=10807-12)
library(palmerpenguins)
Data<-penguins
##remove penguins with gender missing
Data<-Data[complete.cases(Data[ , 7]),-c(2,8)]
##80-20 split
set.seed(1)
sample<-sample.int(nrow(Data), floor(.80*nrow(Data)), replace = F)
train<-Data[sample, ]
test<-Data[-sample, ]
#fitting model
result<- glm(sex~bill_length_mm+bill_depth_mm+body_mass_g+species,family=binomial,data=train)
##predicted probs for test data
preds<-predict(result,newdata=test, type="response")
##produce the numbers associated with classification table
rates<-ROCR::prediction(preds, test$sex)
##store the true positive and false postive rates
roc_result<-ROCR::performance(rates,measure="tpr", x.measure="fpr")
##plot ROC curve and overlay the diagonal line for random guessing
plot(roc_result, main="ROC Curve for Reduced Model")
lines(x = c(0,1), y = c(0,1), col="red")
##compute the AUC
auc<-ROCR::performance(rates, measure = "auc")
auc@y.values
##confusion matrix with threshold of 0.5
table(test$sex, preds>0.5)
##confusion matrix with threshold of 0.5
table(test$sex, preds>0.6)
View(train)
##pvalue
2*pt(-abs(-3.985), df = 50-2)
source("~/Desktop/UVA/STAT 6021/Module 4/tutorial04_23.R", echo=TRUE)
2 * pt(-abs(3.5840), df = 60- 2)
pf(abs(12.83), df = 1, 58)
pf(12.85, 1, 58)
1-pf(12.85, 1, 58)
qt(0.975, 60-2)
library(tidyverse)
library(palmerpenguins)
Data<-penguins
Gentoo<-Data %>%
filter(species=="Gentoo") %>%
filter(!is.na(flipper_length_mm)) %>%
filter(!is.na(body_mass_g))
result<-lm(body_mass_g~flipper_length_mm,data=Gentoo)
summary(result)
ggplot2::ggplot(Gentoo,aes(x=flipper_length_mm,y=body_mass_g))+
geom_point()+
geom_smooth(method="lm",se=FALSE)+
labs(x="Flipper Length (mm)",y="Body Mass (g)",title="Gentoo Species Body Mass against Flipper Length")
confint(result,level=0.95)[2,]
newdata<-data.frame(flipper_length_mm = 200)
predict(result,newdata,level=0.95,interval="confidence")
predict(result,newdata,level=0.95,interval="prediction")
qt(0.95, 60-2)
1-pt(0.5823327616, 60-2)
qt(0.975, 60-2)
library(tidyverse)
copier<-read.table(file="copier.txt", header = TRUE)
result<-lm(Minutes~Serviced,data=copier)
confint(result,level=0.95)[2,]
newdata<-data.frame(Serviced=5)
predict(result,newdata,level=0.95,interval="prediction")
summary(result)
qt(0.975,df=10-2)
Data<-read.csv("kc_house_data.csv", sep=",", header=TRUE)
set.seed(6021)
sample.data<-sample.int(nrow(Data), floor(.50*nrow(Data)), replace = F)
train<-Data[sample.data, ]
test<-Data[-sample.data, ]
train$house_age<-2024 - train$yr_built
train$yrs_reno<-ifelse(train$yr_renovated == 0,0, 2024 - train$yr_renovated)
#train$floors<-factor(train$floors)
#train$bedrooms<-factor(train$bedrooms)
#train$waterfront<-factor(train$waterfront)
#train$view<-factor(train$view)
#rain$condition<-factor(train$condition)
train<-train[,-c(1,2,15,16,18,19,20,21)]
allreg <- leaps::regsubsets(price ~., data=train, nbest=1)
summary(allreg)
which.max(summary(allreg)$adjr2)
which.min(summary(allreg)$cp)
which.min(summary(allreg)$bic)
regnull <- lm(price~1, data=train)
regfull <- lm(price~., data=train)
step(regnull, scope=list(lower=regnull, upper=regfull), direction="forward", trace = 0 )
step(regfull, scope=list(lower=regnull, upper=regfull), direction="backward", trace = 0)
step(regnull, scope=list(lower=regnull, upper=regfull), direction="both", trace = 0)
model.initial<-lm(price ~ sqft_living + grade + house_age + waterfront +
view + bathrooms + bedrooms + sqft_lot + condition + floors +
sqft_above, data = train)
summary(model.initial)
2 * pt(-1.4524, df=10807-12)
sort(round(car::vif(model.initial),4))
refit1<-lm(price ~ sqft_living + grade + house_age + waterfront +
view + bathrooms + bedrooms + sqft_lot + condition + floors
,data=train)
summary(refit1)
sort(round(car::vif(refit1),4))
#allreg <- leaps::regsubsets(price ~ sqft_living + grade + house_age + waterfront +
#   view + bathrooms + bedrooms + sqft_lot + condition + floors
#  , data=train, nbest=1)
#summary(allreg)
#which.max(summary(allreg)$adjr2)
#which.min(summary(allreg)$cp)
#which.min(summary(allreg)$bic)
par(mfrow=c(2,2))
plot(refit1)
#ACF Doesn't work, not all arguments have the same length
#acf(refit1)
MASS::boxcox(refit1, lambda = seq(-0.2, 0.2, 0.1))
ystar<-log(train$price)
train<-data.frame(train,ystar)
ystar_result<-lm(ystar ~ sqft_living + grade + house_age + waterfront +
view + bathrooms + bedrooms + sqft_lot + condition + floors
,data=train)
par(mfrow=c(2,2))
plot(ystar_result)
car::avPlots(ystar_result)
#######################
##Teacher pay example##
#######################
library(ggplot2) ##for visuals
library(MASS) ##for boxcox
Data<-read.table("teacher_pay.txt", header=TRUE, sep="")
setwd("~/Desktop/UVA/STAT 6021/Module 10")
source("~/Desktop/UVA/STAT 6021/Module 10/mod10tut_code.R", echo=TRUE)
setwd("~/Desktop/UVA/STAT 6021/Module 10")
source("~/Desktop/UVA/STAT 6021/Module 10/mod10tut_code.R", echo=TRUE)
