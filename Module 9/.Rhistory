?regsubsets
allreg2 <- leaps::regsubsets(y ~., data=Data, nbest=2)
coef(allreg2,which.max(summary(allreg2)$adjr2))
coef(allreg2,which.min(summary(allreg2)$cp))
coef(allreg2,which.min(summary(allreg2)$bic))
allreg2 <- leaps::regsubsets(y ~., data=Data, nbest=2)
print("The candidate model for Adjusted R2 is:")
coef(allreg2,which.max(summary(allreg2)$adjr2))
coef(allreg2,which.min(summary(allreg2)$cp))
coef(allreg2,which.min(summary(allreg2)$bic))
allreg2 <- leaps::regsubsets(y ~., data=Data, nbest=2)
print("The candidate model for Adjusted R2 is:")
coef(allreg2,which.max(summary(allreg2)$adjr2))
print("The candidate model for Mallow's Cp is:")
coef(allreg2,which.min(summary(allreg2)$cp))
print("The candidate model for BIC is:")
coef(allreg2,which.min(summary(allreg2)$bic))
allreg2 <- leaps::regsubsets(y ~., data=Data, nbest=2)
print("Adjusted R2")
coef(allreg2,which.max(summary(allreg2)$adjr2))
print("Mallow's Cp")
coef(allreg2,which.min(summary(allreg2)$cp))
print("BIC")
coef(allreg2,which.min(summary(allreg2)$bic))
##intercept only model
regnull <- lm(y~1, data=Data)
##model with all predictors
regfull <- lm(y~., data=Data)
##intercept only model
regnull <- lm(y~1, data=Data)
##model with all predictors
regfull <- lm(y~., data=Data)
step(regnull, scope=list(lower=regnull, upper=regfull), direction="forward")
step(regfull, scope=list(lower=regnull, upper=regfull), direction="backward")
step(regnull, scope=list(lower=regnull, upper=regfull), direction="both")
m<-lm(y~x2+x7+x8,data=Data)
#Residuals of the model
r<-resid(m)
#Predictively adjusted residuals
pr<-resid(m)/(1-lm.influence(m)$hat)
#RSS
sum(r^2)
#PRESS
sum(pr^2)
press<-sum(resid(m)/(1-lm.influence(m)$hat)^2)
m<-lm(y~x2+x7+x8,data=Data)
#Residuals of the model
#r<-resid(m)
#Predictively adjusted residuals
#pr<-resid(m)/(1-lm.influence(m)$hat)
#RSS
#sum(r^2)
#PRESS
#sum(pr^2)
press<-sum(resid(m)/(1-lm.influence(m)$hat)^2)
m<-lm(y~x2+x7+x8,data=Data)
#Residuals of the model
#r<-resid(m)
#Predictively adjusted residuals
#pr<-resid(m)/(1-lm.influence(m)$hat)
#RSS
#sum(r^2)
#PRESS
#sum(pr^2)
press<-sum(resid(m)/(1-lm.influence(m)$hat)^2)
m<-lm(y~x2+x7+x8,data=Data)
#Residuals of the model
#r<-resid(m)
#Predictively adjusted residuals
#pr<-resid(m)/(1-lm.influence(m)$hat)
#RSS
#sum(r^2)
#PRESS
#sum(pr^2)
press<-sum(resid(m)/(1-lm.influence(m)$hat)^2)
print(press)
m<-lm(y~x2+x7+x8,data=Data)
#Residuals of the model
r<-resid(m)
#Predictively adjusted residuals
#pr<-resid(m)/(1-lm.influence(m)$hat)
#RSS
#sum(r^2)
#PRESS
#sum(pr^2)
press<-sum(resid(m)/(1-lm.influence(m)$hat)^2)
print(press)
m<-lm(y~x2+x7+x8,data=Data)
#Residuals of the model
r<-resid(m)
r
#Predictively adjusted residuals
#pr<-resid(m)/(1-lm.influence(m)$hat)
#RSS
#sum(r^2)
#PRESS
#sum(pr^2)
press<-sum(resid(m)/(1-lm.influence(m)$hat)^2)
print(press)
m<-lm(y~x2+x7+x8,data=Data)
#Residuals of the model
r<-resid(m)
r
#Predictively adjusted residuals
pr<-resid(m)/(1-lm.influence(m)$hat)
pr
#RSS
RSS<-sum(r^2)
RSS
#PRESS
#sum(pr^2)
press<-sum(resid(m)/(1-lm.influence(m)$hat)^2)
press
m<-lm(y~x2+x7+x8,data=Data)
#Residuals of the model
r<-resid(m)
r
#Predictively adjusted residuals
pr<-resid(m)/(1-lm.influence(m)$hat)
pr
#RSS
RSS<-sum(r^2)
RSS
#PRESS
#sum(pr^2)
press<-sum(resid(m)/(1-lm.influence(m)$hat)^2)
sum(pr^2)
m<-lm(y~x2+x7+x8,data=Data)
#Residuals of the model
r<-resid(m)
r
#Predictively adjusted residuals
pr<-resid(m)/(1-lm.influence(m)$hat)
pr
#RSS
RSS<-sum(r^2)
RSS
#PRESS
#sum(pr^2)
press<-sum(resid(m)/(1-lm.influence(m)$hat)^2)
print(press)
sum(pr^2)
m<-lm(y~x2+x7+x8,data=Data)
#Residuals of the model
r<-resid(m)
r
#Predictively adjusted residuals
pr<-resid(m)/(1-lm.influence(m)$hat)
pr
#RSS
RSS<-sum(r^2)
RSS
#PRESS
#sum(pr^2)
press<-sum((resid(m)/(1-lm.influence(m)$hat))^2)
print(press)
sum(pr^2)
m<-lm(y~x2+x7+x8,data=Data)
#Residuals of the model
r<-resid(m)
r
#Predictively adjusted residuals
pr<-resid(m)/(1-lm.influence(m)$hat)
pr
#RSS
RSS<-sum(r^2)
RSS
#PRESS
#sum(pr^2)
press<-sum((resid(m)/(1-lm.influence(m)$hat))^2)
press
m<-lm(y~x2+x7+x8,data=Data)
#Residuals of the model
r<-resid(m)
#Predictively adjusted residuals
pr<-resid(m)/(1-lm.influence(m)$hat)
#RSS
RSS<-sum(r^2)
RSS
#PRESS
#sum(pr^2)
press<-sum((resid(m)/(1-lm.influence(m)$hat))^2)
press
m<-lm(y~x2+x7+x8,data=Data)
#Residuals of the model
r<-resid(m)
#Predictively adjusted residuals
pr<-resid(m)/(1-lm.influence(m)$hat)
#RSS
RSS<-sum(r^2)
print("RSS: ",RSS)
m<-lm(y~x2+x7+x8,data=Data)
#Residuals of the model
r<-resid(m)
#Predictively adjusted residuals
pr<-resid(m)/(1-lm.influence(m)$hat)
#RSS
RSS<-sum(r^2)
cat("RSS: ",RSS)
#PRESS
#sum(pr^2)
press<-sum((resid(m)/(1-lm.influence(m)$hat))^2)
cat("PRESS: ", press)
m<-lm(y~x2+x7+x8,data=Data)
#Residuals of the model
r<-resid(m)
#Predictively adjusted residuals
pr<-resid(m)/(1-lm.influence(m)$hat)
#RSS
RSS<-sum(r^2)
sprintf("RSS: %s", RSS)
#PRESS
#sum(pr^2)
press<-sum((resid(m)/(1-lm.influence(m)$hat))^2)
sprintf("PRESS: ", press)
m<-lm(y~x2+x7+x8,data=Data)
#Residuals of the model
r<-resid(m)
#Predictively adjusted residuals
pr<-resid(m)/(1-lm.influence(m)$hat)
#RSS
RSS<-sum(r^2)
sprintf("RSS: %s", round(RSS,4)
#PRESS
#sum(pr^2)
press<-sum((resid(m)/(1-lm.influence(m)$hat))^2)
m<-lm(y~x2+x7+x8,data=Data)
#Residuals of the model
r<-resid(m)
#Predictively adjusted residuals
pr<-resid(m)/(1-lm.influence(m)$hat)
#RSS
RSS<-sum(r^2)
sprintf("RSS: %s", round(RSS,4))
#PRESS
#sum(pr^2)
press<-sum((resid(m)/(1-lm.influence(m)$hat))^2)
sprintf("PRESS: %s", press)
m<-lm(y~x2+x7+x8,data=Data)
#Residuals of the model
r<-resid(m)
#Predictively adjusted residuals
pr<-resid(m)/(1-lm.influence(m)$hat)
#RSS
RSS<-sum(r^2)
sprintf("RSS: %s", round(RSS,6))
#PRESS
#sum(pr^2)
press<-sum((resid(m)/(1-lm.influence(m)$hat))^2)
sprintf("PRESS: %s", round(press,6))
m<-lm(y~x2+x7+x8,data=Data)
#Residuals of the model
r<-resid(m)
#Predictively adjusted residuals
pr<-resid(m)/(1-lm.influence(m)$hat)
#RSS
RSS<-sum(r^2)
sprintf("RSS: %s", round(RSS,4))
#PRESS
#sum(pr^2)
press<-sum((resid(m)/(1-lm.influence(m)$hat))^2)
sprintf("PRESS: %s", round(press,4))
m<-lm(y~x2+x7+x8,data=Data)
#Residuals of the model
r<-resid(m)
#Predictively adjusted residuals
pr<-resid(m)/(1-lm.influence(m)$hat)
#RSS
RSS<-sum(r^2)
sprintf("RSS: %s", round(RSS,6))
#PRESS
#sum(pr^2)
press<-sum((resid(m)/(1-lm.influence(m)$hat))^2)
sprintf("PRESS: %s", round(press,4))
m<-lm(y~x2+x7+x8,data=Data)
press<-sum((resid(m)/(1-lm.influence(m)$hat))^2)
sprintf("PRESS: %s", round(press,4))
m<-lm(y~x2+x7+x8,data=Data)
press<-sum((resid(m)/(1-lm.influence(m)$hat))^2)
sprintf("PRESS: %s", round(press,4))
summary(m)
# R2 Prediction
R2Pre<-1-(press/SSt)
m<-lm(y~x2+x7+x8,data=Data)
press<-sum((resid(m)/(1-lm.influence(m)$hat))^2)
sprintf("PRESS: %s", round(press,4))
SSres <- sum((fitted(m) - Data$y)^2)
SSR <- sum((fitted(m) - mean(Data$y))^2)
SSt<-SSR + SSres
# R2 Prediction
R2Pre<-1-(press/SSt)
m<-lm(y~x2+x7+x8,data=Data)
press<-sum((resid(m)/(1-lm.influence(m)$hat))^2)
sprintf("PRESS: %s", round(press,4))
SSres <- sum((fitted(m) - Data$y)^2)
SSR <- sum((fitted(m) - mean(Data$y))^2)
SSt<-SSR + SSres
# R2 Prediction
R2Pre<-1-(press/SSt)
sprintf("R^2 Prediciton: %s", round(R2Pre,4))
m<-lm(y~x2+x7+x8,data=Data)
press<-sum((resid(m)/(1-lm.influence(m)$hat))^2)
sprintf("PRESS: %s", round(press,4))
SSres <- sum((fitted(m) - Data$y)^2)
SSR <- sum((fitted(m) - mean(Data$y))^2)
SSt<-SSR + SSres
# R2 Prediction
R2Pre<-1-(press/SSt)
sprintf("R^2 Prediciton: %s", round(R2Pre,4))
R2<-SSR/SSt
sprintf("R^2: %s", round(R2,4))
model<-lm(y~x2+x7+x8,data=Data)
press<-sum((resid(m)/(1-lm.influence(model)$hat))^2)
sprintf("PRESS: %s", round(press,4))
SSres <- sum((fitted(model) - Data$y)^2)
SSR <- sum((fitted(model) - mean(Data$y))^2)
SSt<-SSR + SSres
#SST<-sum(anova(model)$"Sum Sq")
# R2 Prediction
R2Pre<-1-(press/SSt)
sprintf("R^2 Prediciton: %s", round(R2Pre,4))
# R2
R2<-SSR/SSt
sprintf("R^2: %s", round(R2,4))
#R2<-anova(m)$"Sum Sq"[1]/SST
plot(model)
acf(model$residuals, main="ACF Plot of Residuals")
boxcox(model)
par(mfrow=c(2,2))
plot(model)
acf(model$residuals, main="ACF Plot of Residuals")
boxcox(model)
library(tidyverse)
library(MASS)
library(leaps)
Data<-read.table("nfl.txt", header=TRUE, sep="")
library(tidyverse)
library(MASS)
Data<-birthwt
Data<-birthwt
?birthwt
View(Data)
Data<-birthwt
?birthwt
contrasts(Data$low)
Data<-birthwt
?birthwt
Data$low<factor(Data$low)
contrasts(Data$low)
Data<-birthwt
?birthwt
Data$low<factor(Data$low)
is.na(Data)
contrasts(Data$low)
Data<-birthwt
?birthwt
Data$low<factor(Data$low)
is.na(Data$low)
contrasts(Data$low)
Data<-birthwt
?birthwt
Data$low<factor(Data$low)
contrasts(Data$low)
Data<-birthwt
?birthwt
#ata$low<factor(Data$low)
#contrasts(Data$low)
contrasts(Data$race)
Data<-birthwt
?birthwt
#ata$low<factor(Data$low)
#contrasts(Data$low)
Data$race<-factor(Data$race)
contrasts(Data$race)
contrasts(Data$smoke)
Data<-birthwt
?birthwt
Data$low<factor(Data$low)
contrasts(Data$low)
Data<-birthwt
?birthwt
Data$low<-factor(Data$low)
contrasts(Data$low)
Data$race<-factor(Data$race)
contrasts(Data$race)
contrasts(Data$smoke)
Data<-birthwt
?birthwt
Data$low<-factor(Data$low)
contrasts(Data$low)
Data$race<-factor(Data$race)
contrasts(Data$race)
Data$smoke<-factor(Data$smoke)
contrasts(Data$smoke)
contrasts(Data$ht)
Data<-birthwt
?birthwt
Data$low<-factor(Data$low)
contrasts(Data$low)
Data$race<-factor(Data$race)
contrasts(Data$race)
Data$smoke<-factor(Data$smoke)
contrasts(Data$smoke)
Data$ht<-factor(Data$ht)
contrasts(Data$ht)
contrasts(Data$ui)
Data<-birthwt
?birthwt
Data$low<-factor(Data$low)
contrasts(Data$low)
Data$race<-factor(Data$race)
contrasts(Data$race)
Data$smoke<-factor(Data$smoke)
contrasts(Data$smoke)
Data$ht<-factor(Data$ht)
contrasts(Data$ht)
Data$ui<-factor(Data$ui)
contrasts(Data$ui)
Data<-birthwt
?birthwt
#Checked all by using contrasts()
Data$low<-factor(Data$low)
Data$race<-factor(Data$race)
Data$smoke<-factor(Data$smoke)
Data$ht<-factor(Data$ht)
Data$ui<-factor(Data$ui)
Data2<-Data[,2:10]
regnull <- lm(bwt~1, data=Data2)
regfull<-lm(bwt~.,data=Data2)
step(regnull, scope=list(lower=regnull, upper=regfull), direction="forward")
step(regfull, scope=list(lower=regnull, upper=regfull), direction="backward")
step(regnull, scope=list(lower=regnull, upper=regfull), direction="both")
View(Data2)
library(tidyverse)
library(MASS)
library(leaps)
Data2<-Data[,2:10]
allreg <- leaps::regsubsets(mpg ~., data=Data, nbest=1)
Data2<-Data[,2:10]
allreg <- leaps::regsubsets(bwt ~., data=Data2, nbest=1)
summary(allreg)
Data<-mtcars
############################
## Check variables to see if there is categorical variables-are they dummy coded or do you need to force factor()?
############################
?mtcars
# In the information for the dataset we see [, 8]	vs	Engine (0 = V-shaped, 1 = straight) [, 9]	am	Transmission (0 = automatic, 1 = manual) are already dummy coded for us.
############################
##all possible regressions##
############################
##perform all possible regressions (nbest=1) nbest default = 1
allreg <- leaps::regsubsets(mpg ~., data=Data, nbest=1)
summary(allreg)
library(tidyverse)
library(MASS)
library(leaps)
Data<-birthwt
?birthwt
#Checked all by using contrasts()
Data$low<-factor(Data$low)
Data$race<-factor(Data$race)
Data$smoke<-factor(Data$smoke)
Data$ht<-factor(Data$ht)
Data$ui<-factor(Data$ui)
Data2<-Data[,2:10]
allreg <- leaps::regsubsets(bwt ~., data=Data2, nbest=1)
summary(allreg)
Data2<-Data[,2:10]
allreg <- leaps::regsubsets(bwt ~., data=Data2, nbest=1)
which.max(summary(allreg2)$adjr2)
Data2<-Data[,2:10]
allreg <- leaps::regsubsets(bwt ~., data=Data2, nbest=1)
which.max(summary(allreg)$adjr2)
which.min(summary(allreg)$cp)
which.min(summary(allreg)$bic)
library(tidyverse)
library(MASS)
library(leaps)
Data<-birthwt
?birthwt
#Checked all by using contrasts()
Data$low<-factor(Data$low)
Data$race<-factor(Data$race)
Data$smoke<-factor(Data$smoke)
Data$ht<-factor(Data$ht)
Data$ui<-factor(Data$ui)
Data2<-Data[,2:10]
allreg <- leaps::regsubsets(bwt ~., data=Data2, nbest=1)
which.max(summary(allreg)$adjr2)
which.min(summary(allreg)$cp)
which.min(summary(allreg)$bic)
Data2<-Data[,2:10]
allreg <- leaps::regsubsets(bwt ~., data=Data2, nbest=1)
summary(allreg)
which.max(summary(allreg)$adjr2)
which.min(summary(allreg)$cp)
which.min(summary(allreg)$bic)
regfull<-lm(bwt~.,data=Data2)
step(regfull, scope=list(lower=regnull, upper=regfull), direction="backward")
regnull <- lm(bwt~1, data=Data2)
regfull<-lm(bwt~.,data=Data2)
step(regfull, scope=list(lower=regnull, upper=regfull), direction="backward")
x <- 1
class(x)
qt(1-(0.05/(2*3)),(51-6))
u <- c(10, 20, 30)
v <- c(1, 2, 3, 4, 5, 6, 7, 8)
u + v
##find coefficients and predictors of model with best
##adj r2, cp, bic
coef(allreg2, which.max(summary(allreg2)$adjr2))
source("~/Desktop/UVA/STAT 6021/Module 9/tutorial_module09.R", echo=TRUE)
